#0-add_integer.py
===========================
Using 0-add_integer.py
===========================

First we test using integers
============================
  
>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(3, 3)
6

>>> add_integer(2, -4)
-2

Floats should be casted into integers
=====================================

>>> add_integer(3.0, 3.0)
6

>>> add_integer(2.9, 0.2)
2

>>> add_integer(-2.9, -0.2)
-2

>>> add_integer(2.3, -3)
-1

>>> add_integer(1)
99

Non-Numbers
===========

    >>> add_integer("sch", 3)
    Traceback (most recent call last):
    TypeError: a must be an integer


    >>> add_integer(3, "sch")
    Traceback (most recent call last):
    TypeError: b must be an integer


    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer


    >>> add_integer(3.2, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

If both arguments are non-integers and non-floats, a TypeError message is only
printed for the first argument.
==============================================================================

    >>> add_integer("sch", "alx")
    Traceback (most recent call last):
    TypeError: a must be an integer

The function will fail at infinity
==================================

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(3, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

Trying with NaN numbers
==========================

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(3, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
